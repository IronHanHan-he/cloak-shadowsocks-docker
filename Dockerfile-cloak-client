FROM golang:alpine AS build

WORKDIR /opt
# Install Prerequisites
RUN apk add git make

# Clone Repo
RUN git clone https://github.com/cbeuw/Cloak.git

# Get Golang libs
RUN go get github.com/boltdb/bolt && \
    go get github.com/juju/ratelimit && \
    go get github.com/gorilla/mux && \
    go get github.com/gorilla/websocket && \
    go get github.com/sirupsen/logrus && \
    go get github.com/refraction-networking/utls

RUN mkdir -p /go//src/golang.org/x/crypto && \
    cd /go//src/golang.org/x/crypto && \
    git clone https://github.com/golang/crypto.git

# Build application
WORKDIR /opt/Cloak
RUN make client

# Final Docker image 
FROM alpine:latest

RUN apk upgrade \
    && apk add --no-cache tzdata \
    && rm -rf /var/cache/apk/*

ENV TZ               Etc/UTC
ENV TRANSPORT        direct
ENV METHOD           shadowsocks
ENV ENCRYPTION       plain
ENV CLIENTUID        SB2SgfFS2LVew5OSF8L6Bw==
ENV PUBLICKEY        IYoUzkle/T/kriE+Ufdm7AHQtIeGnBWbhhlTbmDpUUI=
ENV SERVERNAME       example.com
ENV CONNECTIONNUM    4
ENV BROWSER          chrome
ENV SERVER_IP=       
ENV LOCAL_PORT       443
ENV ADMINUID         SB2SgfFS2LVew5OSF8L6Bw==

WORKDIR /app
COPY --from=build /opt/Cloak/build/ck-client /app/ck-client
COPY config/cloak-client.conf /app/config.json
COPY scripts/entrypoint-cloak-client.sh /app/entrypoint.sh
RUN chmod +x ck-client
RUN chmod +x entrypoint.sh

ENTRYPOINT [ "./entrypoint.sh" ]
